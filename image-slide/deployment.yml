apiVersion: apps/v1
kind: Deployment
metadata:
  name: image-slide
spec:
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: image-slide-frontend
  replicas: 1 # You could also consider elastic scaling for this deployment
  template:
    metadata:
      labels:
        app: image-slide-frontend
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: image-slide-frontend
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - image-slide-frontend
            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: image-slide-frontend
          image: ghcr.io/o-tr/imageslide-converter:v0.0.2
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          envFrom:
            - configMapRef:
                name: image-slide-config
          livenessProbe:
            httpGet:
              path: /api/healthz
              port: 3000
            failureThreshold: 1
            periodSeconds: 10
          startupProbe:
            httpGet:
              path: /api/healthz
              port: 3000
            failureThreshold: 360
            periodSeconds: 10
          resources:
            limits:
              memory: 2Gi
              cpu: "2"
            requests:
              memory: 1Gi
              cpu: "1"
        - name: nginx-proxy
          image: nginx
          ports:
            - containerPort: 80
          resources:
            limits:
              memory: 1Gi
              cpu: "1"
            requests:
              memory: 0.5Gi
              cpu: "0.1"
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/conf.d/
      volumes:
        - name: config
          configMap:
            name: image-slide-nginx-config
---
kind: Service
apiVersion: v1
metadata:
  name: image-slide-svc
spec:
  selector:
    app: image-slide-frontend
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
      name: frontend
    - protocol: TCP
      port: 80
      targetPort: 80
      name: nginx
  type: LoadBalancer
